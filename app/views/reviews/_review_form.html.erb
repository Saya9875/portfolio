<section class="rating-box min-h-screen bg-white-300 flex flex-col sm:py-12">
  <div class="py-3 sm:max-w-xl sm:mx-auto">
  <%= form_with model: review, url: item_reviews_path(item), local: true do |f| %>
    <div class="bg-white min-w-1xl flex flex-col rounded-xl shadow-lg">
      <div class="px-12 py-3">
        <h2 class="tracking-wider text-gray-800 text-2xl font-semibold">感想をレビューしてみよう！</h2>
      </div>
      <div class="bg-gray-100 w-full flex flex-col items-center">
        <div class="flex flex-col items-center py-3 space-y-3">
          <div class="text-lg text-gray-800">この商品はどうだった？</div>
            <div class="main-rating">
              <div class="flex space-x-3 text-yellow-500 ratings">
                <span class="fa fa-star-o fa-2x" id="star"></span>
                <span class="fa fa-star-o fa-2x" id="star"></span>
                <span class="fa fa-star-o fa-2x" id="star"></span>
                <span class="fa fa-star-o fa-2x" id="star"></span>
                <span class="fa fa-star-o fa-2x" id="star"></span> 
                </div>
            <div class="ml-3 rating-value-display"><span id="rating-value-display">0</span>/5</div>
            </div>
          <%= f.hidden_field :item_id, value: item.id %>
          <%= f.hidden_field :score, id: "rating-value" %>
        </div>
        <div class="w-3/4 flex flex-col">
          <%= f.text_field :review_content, placeholder: "感想を教えて！", class: "p-4 text-gray-500 rounded-xl resize-none h-40" %>
          <button class="">
            <%= f.submit "レビューする", class: "py-3 my-8 text-lg bg-gradient-to-r from-purple-500 to-indigo-600 rounded-xl text-white w-full" %>
          </button>
        </div>
      </div>
    </div>
  <% end %>
  </div>
</section>


<script type="text/javascript">

  // class = "ratings"の子要素を取得
var stars = document.querySelector(".ratings").children;
// id = "rating-value"の要素を取得
var ratingValue = document.getElementById("rating-value");
// id = "rating-value-display"の要素を取得
var ratingValueDisplay = document.getElementById("rating-value-display");
// indexという変数を定義
var index;

for(let i=0; i<stars.length; i++){
	console.log(stars.length)
	// 星にカーソルが乗ったときに実行する関数を定義
	stars[i].addEventListener("mouseover",function(){
		// stars.lengthの値（5）だけ繰り返し
		// つまり、星カーソルが乗った時、5回繰り返される
		for(let j=0; j<stars.length; j++){
			console.log(stars.length)
			// まず全て星をくり抜く
			stars[j].classList.remove("fa-star");
			stars[j].classList.add("fa-star-o");
		}
		// そのあと星の数だけ以下の関数が繰り返される。
		for(let j=0; j<=i; j++){
			console.log(stars.length)
			stars[j].classList.remove("fa-star-o");
			// カーソルが乗った星まで星を塗りつぶす
			stars[j].classList.add("fa-star");
		}
	})
	// クリックされた星の番号+1をratingValueに代入
	stars[i].addEventListener("click",function(){
		ratingValue.value = i+1;
		ratingValueDisplay.textContent = ratingValue.value;
		// indexにクリックされた星の番号を代入
		index = i;
	})
	// 星からカーソルが離れたときに実行される関数
	stars[i].addEventListener("mouseout",function(){
		// まず5回繰り返す
		for(let j=0; j<stars.length; j++){
			// まず全ての星をくり抜く
			stars[j].classList.remove("fa-star");
			stars[j].classList.add("fa-star-o");
		}
		for(let j=0; j<=index; j++){
			// クリックされている星まで塗りつぶす
			stars[j].classList.remove("fa-star-o");
			stars[j].classList.add("fa-star");
		}
	})
}

</script>