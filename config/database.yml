# MySQL. Versions 5.5.8 and up are supported.
#
# Install the MySQL driver
#   gem install mysql2
#
# Ensure the MySQL gem is defined in your Gemfile
#   gem 'mysql2'
#
# And be sure to use new-style password hashing:
#   https://dev.mysql.com/doc/refman/5.7/en/password-hashing.html
#
default: &default
  adapter: mysql2
  encoding: utf8mb4
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  socket: /tmp/mysql.sock

development:
  <<: *default
  database: ours_development
  username: <%= ENV['DATABASE_DEV_USER'] %>
  password: <%= ENV['DATABASE_DEV_PASSWORD'] %>
  host:     <%= ENV['DATABASE_DEV_HOST'] %>

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: ours_test
  username: <%= ENV['DATABASE_TES_USER'] %>
  password: <%= ENV['DATABASE_TES_PASSWORD'] %>
  host:     <%= ENV['DATABASE_TES_HOST'] %>

# As with config/credentials.yml, you never want to store sensitive information,
# variable when you boot the app. For example:
#   DATABASE_URL="mysql2://myuser:mypass@localhost/somedatabase"
# If the connection URL is provided in the special DATABASE_URL environment
# variable, Rails will automatically merge its configuration values on top of
# the values provided in this file. Alternatively, you can specify a connection
# URL environment variable explicitly:
#   production:
#     url: <%= ENV['MY_APP_DATABASE_URL'] %>
# Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full overview on how database connection configuration can be specified.
production:
  <<: *default
  database: ours_production
  username: <%= ENV['DATABASE_PRO_USER'] %>
  password: <%= ENV['DATABASE_PRO_PASSWORD'] %>
  host:     <%= ENV['DATABASE_PRO_HOST'] %>
  